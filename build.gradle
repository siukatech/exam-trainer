plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'org.openapi.generator' version '7.6.0'
}

group = 'com.siukatech'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenLocal()
	mavenCentral()
	if (project.hasProperty("platformSnapshotUri")) {
		maven {
			name = 'platformSnapshot'
			allowInsecureProtocol = true
			credentials(PasswordCredentials)
			url = uri("$platformSnapshotUri")
		}
	}
}

bootJar {
	exclude('application*.properties', 'application*.yml')
}

// define react-backend-parent version
def parentProjectVersion = '0.0.1-SNAPSHOT'

dependencies {
	implementation 'com.siukatech.poc:react-backend-parent:0.0.1-SNAPSHOT'

	// https://mvnrepository.com/artifact/com.fasterxml.uuid/java-uuid-generator
	implementation 'com.fasterxml.uuid:java-uuid-generator:5.0.0'

	// Class com.sun.tools.javac.tree.JCTree$JCImport does not have member field 'com.sun.tools.javac.tree.JCTree qualid'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'

	runtimeOnly 'org.postgresql:postgresql:42.6.0'

	testImplementation testFixtures("com.siukatech.poc:react-backend-parent:$parentProjectVersion")
}

// after upgrade to springboot >= 3.2.1
// this can be fixed by update build.gradle or adding maven plugin
// https://stackoverflow.com/a/77691302
// https://github.com/spring-projects/spring-framework/wiki/Upgrading-to-Spring-Framework-6.x#parameter-name-retention
tasks.withType(JavaCompile).configureEach {
	options.compilerArgs.add("-parameters")
}

tasks.named('test') {
	useJUnitPlatform()
}


// pagination configuration
// https://github.com/OpenAPITools/openapi-generator/blob/master/docs/generators/spring.md
// https://medium.com/learning-from-jhipster/21-contoller-service-repository的建立-2-pageable-sort-的使用與-swagger-的設定-f3dc2a1b772d
// https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator-gradle-plugin/README.adoc
// https://github.com/OAI/OpenAPI-Specification/blob/main/examples/v3.0/api-with-examples.yaml
def openapiPackageRoot = "com.siukatech.exam.trainer.web"
tasks.openApiGenerate {
	dependsOn(clean)
	// Reference:
	// https://openapi-generator.tech/docs/generators/spring/#metadata
	generatorName.set("spring")
	library.set("spring-boot")
//	inputSpec.set("$rootDir/specs/exam-trainer-v0.0.1.yaml")
	inputSpec.set("/Users/siuka/dev-workspace/openapi-spec/exam-trainer/exam-trainer-v0.0.1.yaml")
//	remoteInputSpec.set("https://raw.githubusercontent.com/siukatech/openapi-spec/main/exam-trainer/exam-trainer-v0.0.1.yaml")
	outputDir.set("$buildDir/generated")
	apiPackage.set("$openapiPackageRoot" + ".api")
	invokerPackage.set("$openapiPackageRoot" + ".invoker")
	modelPackage.set("$openapiPackageRoot" + ".model")
	// Reference:
	// https://github.com/gradle/develocity-api-samples/blob/main/build.gradle.kts
	openapiNormalizer.set(["REF_AS_PARENT_IN_ALLOF": "true"])
	// Reference:
	// https://stackoverflow.com/q/73384038
	configOptions.set([
			dateLibrary: "java8"

			// interfaceOnly=true will generate the interface class only, no implementation
			, interfaceOnly: "true"

			// useTags=true will generate the method operationId to specified tag(s), not by uri
			, useTags: "true"

//            , delegatePattern: "true"
			// Reference:
			// https://openapi-generator.tech/docs/generators/spring/#metadata
			, serializableModel: "true"
			, useBeanValidation: "true"
			, useResponseEntity: "true"
			, useSpringBoot3: "true"
			, useSpringController: "true"
			, useSwaggerUI: "true"
	])
	typeMappings.set([
			// Reference:
			// https://stackoverflow.com/a/77016049
			"string+date-time": "LocalDateTime"
			//
			// Reference:
			// https://stackoverflow.com/a/69464205
			// https://stackoverflow.com/a/76366031
			, "time": "LocalTime"
			, "pageable": "Pageable"
			, "page": "Page"
	])
	importMappings.set([
			LocalDateTime: "java.time.LocalDateTime"
			, LocalTime: "java.time.LocalTime"
			, Pageable: "org.springframework.data.domain.Pageable"
			, Page: "org.springframework.data.domain.Page"
	])
	// https://github.com/OpenAPITools/openapi-generator/pull/5166#issuecomment-588422333
	additionalProperties.set([
			"removeEnumValuePrefix": "false"
//            "removeEnumValuePrefix": "true"
	])
}

sourceSets {
	main {
		java {
			srcDir("$buildDir/generated/src/main/java")
		}
	}
}

tasks.compileJava {
	dependsOn(tasks.openApiGenerate)
}
